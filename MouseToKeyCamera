#!/bin/bash

#Requires: xdotool 
#Optional to hide mouse: unclutter

##################
#Check           #
#requirements    #
##################


if [ ! -f /usr/bin/xdotool ]
then
echo "xdotool is required, please install it before running this script"
exit
fi


##################
#Ctrl+C action   #
##################
unclutteractive=0

trap ctrl_c INT

function ctrl_c() {
        
        if [ $unclutteractive -eq 1 ]
        then
        killall /usr/bin/unclutter
        killall mouseclick 
        fi
        exit
}

##################
#Ask for keys    #
##################

echo "##############################################"
echo "# Welcome to MouseToKeyCamera (Made by Azul) #"
echo "##############################################"

##################
#Set Speed       #
##################


echo "##############################################"
echo "Enter speed of camera (number of seconds to wait between keydown and keyup): " 

read -p "Press just Enter to use Default (0.001): " delay
if [ -z "$delay" ]
then
delay=0.001
fi
echo "##############################################"
echo "##############################################"


echo "########     Select your keys map:   #########"
echo "##############################################"


read -p "Enter key (just one letter) for RIGHT_BUTTON (RIGHT AXIS): " right_button
echo "##############################################"
read -p "Enter key (just one letter) for LEFT_BUTTON (LEFT AXIS): " left_button
echo "##############################################"
read -p "Enter key (just one letter) for UP_BUTTON (UP AXIS): " up_button
echo "##############################################"
read -p "Enter key (just one letter) for DOWN_BUTTON (DOWN AXIS): " down_button
echo "##############################################"


##################
#Check unclutter #
##################


read -p "Do you want to map mouse clicks? y/n: " mous
echo "##############################################"

unc=n

if [ -f /usr/bin/unclutter ]

then
read -p "unclutter found, do you want to use it to make mouse invisible? y/n: " unc
echo "##############################################"
else
echo "unclutter dont found, you cant hide the mouse"
echo "##############################################"
fi

##################
#If wants to use #
#clicks          #
##################

if [ $mous == 'y' ]
then


read -p "Enter key (just one letter) for X_BUTTON (LEFT CLICK): " x_button
echo "##############################################"
read -p "Enter key (just one letter) for A_BUTTON (RIGHT CLICK): " a_button
echo "##############################################"


read -p "Do you want to configure extra buttons? y/n: " yes

if [ $yes == 'y' ]
then
echo "##############################################"
read -p "Enter key (just one letter) for MIDDLE CLICK: " midb
echo "##############################################"

read -p "Enter key (just one letter) for UP WHEEL: " upmb
echo "##############################################"

read -p "Enter key (just one letter) for DOWN WHEEL: " downmb

echo "##############################################"
read -p "Enter key (just one letter) for SIDE UP BUTTON: " upsideb

echo "##############################################"
read -p "Enter key (just one letter) for SIDE DOWN BUTTON: " downsideb
echo "##############################################"


echo ""
echo "Starting mouseclick..."
./mouseclick $x_button $a_button $midb $upmb $downmb $upsideb $downsideb $unc &

else
echo ""
echo "Starting mouseclick..."
./mouseclick $x_button $a_button $unc &

fi


if [ $unc == 'y' ]
then
unclutteractive=1
/usr/bin/unclutter -idle 0 -jitter 10000000000000 &
fi

else

echo "DONE, CHANGE TO GAME TAB NOW"
echo "PRESS CTRL+C IN THIS WINDOWS TO STOP SCRIPT"

fi


##################
#Get screen size #
##################

Xaxis=$(xrandr --current | grep '*' | uniq | awk '{print $1}' | cut -d 'x' -f1) 
Yaxis=$(xrandr --current | grep '*' | uniq | awk '{print $1}' | cut -d 'x' -f2)
let "Xaxis=Xaxis/2"
let "Yaxis=Yaxis/2"

if [ $Xaxis -lt 20 ] || [ $Yaxis -lt 20 ]
then
echo "Error getting screen size, configuring default values..."
Xaxis=100
Yaxis=100
fi

##################
#Center mouse    #
##################

xdotool mousemove $Xaxis $Yaxis


var=0


##################
#Infinite Loop   #
##################
   
while [ 1 -eq 1 ]; do
current=0
previous=0


             
eval $(xdotool getmouselocation --shell)

##################
#Get value of    #
#most moved axis #
##################

    right=`expr $X - $Xaxis`
    left=`expr $Xaxis - $X`
    up=`expr $Yaxis - $Y`
    down=`expr $Y - $Yaxis`
    
    a=($right $left $up $down)

    max=0
    for v in ${a[@]}; do
    if (( "$v" > "$max" )); then max=$v; fi; 
    done

    if [ $max -gt 0 ]
    then

        ##################
        #RIGHT           #
        ##################
    
    if [ $max -eq $right ]
    then
    xdotool keydown $right_button
    current=$X
    while [ $previous -ne $current ]
    do
    sleep $delay
    eval $(xdotool getmouselocation --shell)
    previous=$current
    current=$X
    done
    xdotool keyup $right_button
    
        ##################
        #LEFT            #
        ##################
    
    elif [ $max -eq $left ]
    then
    xdotool keydown $left_button
    current=$X
    while [ $previous -ne $current ]
    do
    sleep $delay
    eval $(xdotool getmouselocation --shell)
    previous=$current
    current=$X
    done
    xdotool keyup $left_button
    
        ##################
        #UP              #
        ##################
    
    elif [ $max -eq $up ]
    then   
    xdotool keydown $up_button
    current=$Y
    while [ $previous -ne $current ]
    do
    sleep $delay
    eval $(xdotool getmouselocation --shell)
    previous=$current
    current=$Y
    done
    xdotool keyup $up_button

        ##################
        #DOWN            #
        ##################
     
    elif [ $max -eq $down ]
    then
    xdotool keydown $down_button
    current=$X
    while [ $previous -ne $current ]
    do
    sleep $delay
    eval $(xdotool getmouselocation --shell)
    previous=$current
    current=$X
    done
    xdotool keyup $down_button
        
        ##################
        #END             #
        ##################
    
    fi
    
    
    xdotool mousemove $Xaxis $Yaxis
fi
    #----------------------------------------------------
         
    #------------------------------------------------
    

   
done
